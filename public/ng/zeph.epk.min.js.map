{"version":3,"sources":["app.js","app.routes.js","controllers/dbCtrl.js","controllers/mainCtrl.js","services/authService.js","services/dbService.js"],"names":["angular","module","config","$httpProvider","interceptors","push","run","editableOptions","theme","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","$scope","Database","vm","this","processing","tables","get","success","apiResult","data","error","message","deleteTable","tableName","table","delete","api","$routeParams","noSort","obj","Object","keys","isNumber","isDate","val","date","Date","parse","isNaN","toString","length","getType","myVar","console","log","deleteRow","tableRow","row","$rootScope","$location","Auth","loggedIn","isLoggedIn","$on","event","location","path","getUser","then","node","user","$","animate","scrollTop","doLogin","login","loginData","username","password","doLogout","logout","factory","$http","$q","AuthToken","authFactory","post","setToken","token","getToken","cache","reject","$window","authTokenFactory","localStorage","getItem","setItem","removeItem","interceptorFactory","request","headers","responseError","response","status","dbFactory"],"mappings":"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","file":"zeph.epk.min.js","sourcesContent":["angular.module('epk',\r\n\t\t\t   [\r\n\t\t\t\t\t'xeditable',\r\n\t\t\t\t\t'app.routes',\r\n\t\t\t\t\t'ngAnimate',\r\n\t\t\t\t\t'authService',\r\n\t\t\t\t\t'mainCtrl',\r\n\t\t\t\t\t'dbCtrl',\r\n\t\t\t\t\t'dbService'\r\n\t\t\t   ])\r\n\t\t.config(function($httpProvider) {\r\n\t\t\t$httpProvider.interceptors.push('AuthInterceptor');\r\n\t\t})\r\n\t\t.run(function(editableOptions) {\r\n\t\t\teditableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\r\n\t\t});\r\n\t\t\r\n\t\t","angular.module('app.routes', ['ngRoute'])\r\n\t.config(function ($routeProvider, $locationProvider) {\r\n\t\t$routeProvider\r\n\t\t\t.when('/admin', {\r\n\t\t\t\ttemplateUrl : './views/home.html'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/login', {\r\n\t\t\t\ttemplateUrl : './views/users/login.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'login'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/users', {\r\n\t\t\t\ttemplateUrl : './views/users/all.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'main'\r\n\t\t\t\t//controller  : 'userController',\r\n\t\t\t\t//controllerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/users/new', {\r\n\t\t\t\ttemplateUrl : './views/users/create.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'main'\r\n\t\t\t\t//controller  : 'userCreateController',\r\n\t\t\t\t//controllerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/users/:userId', {\r\n\t\t\t\ttemplateUrl : './views/users/edit.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'main'\r\n\t\t\t\t//controller  : 'userEditController',\r\n\t\t\t\t//controllerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/profile', {\r\n\t\t\t\ttemplateUrl : './views/users/profile.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'main'\r\n\t\t\t\t//controller  : 'userProfileController',\r\n\t\t\t\t//controllerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/db', {\r\n\t\t\t\ttemplateUrl\t: './views/db/index.html',\r\n\t\t\t\tcontroller \t: 'tablesController',\r\n\t\t\t\tcontrollerAs: 'tables'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/db/:table', {\r\n\t\t\t\ttemplateUrl\t: './views/db/table.html',\r\n\t\t\t\tcontroller \t: 'tableController',\r\n\t\t\t\tcontrollerAs: 'table'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/admin/whoa-bro', {\r\n\t\t\t\ttemplateUrl : './views/403.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'main'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.otherwise({\r\n\t\t\t\tredirectTo: '/admin'\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t$locationProvider.html5Mode(true);\r\n\t});\r\n\t","angular.module('dbCtrl', ['dbService'])\r\n\r\n.controller('tablesController', function($scope, Database) {\r\n\t\r\n\tvar vm = this;\r\n\tvm.processing = true;\r\n\t\r\n\tDatabase.tables.get()\r\n\t\t.success(function (apiResult) {\r\n\t\t\tvm.data = apiResult.data;\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function (apiResult) {\r\n\t\t\tif (apiResult) {\r\n\t\t\t\tvm.message = apiResult.message;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.data = null;\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\t\t\t\t\t\t\r\n\tvm.deleteTable = function(tableName) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tDatabase.table.delete(tableName)\r\n\t\t\t.success(function (api) {\r\n\t\t\t\tif (api.success) {\r\n\t\t\t\t\tDatabase.tables.get()\r\n\t\t\t\t\t\t.success(function (apiResult) {\r\n\t\t\t\t\t\t\tvm.data = apiResult.data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = api.message;\r\n\t\t\t});\r\n\t};\r\n\t\r\n})\r\n\r\n.controller('tableController', function($scope, $routeParams, Database) {\r\n\t\r\n\tvar vm = this;\r\n\tvm.processing = true;\r\n\t\r\n\t$scope.noSort = function(obj){\r\n        if (!obj) {\r\n            return [];\r\n        }\r\n\t\t\r\n\t\tif (obj['$$hashKey']) {\r\n\t\t\tdelete obj['$$hashKey'];\r\n\t\t}\r\n\t\t\r\n\t\treturn Object.keys(obj);\r\n    };\r\n\t\r\n\t$scope.isNumber = angular.isNumber;\r\n\t\r\n\t$scope.isDate = function(val) {\r\n\t\tvar date = Date.parse(val);\r\n\t\t\r\n\t\tif(isNaN(date))\r\n\t\t\treturn false;\r\n\t\telse if (val.toString().length < 10)\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t \treturn true;\r\n\t};\r\n\r\n\t$scope.getType = function(myVar) {\r\n\t\treturn typeof myVar;\r\n\t};\r\n\t\r\n\tDatabase.table.get($routeParams.table)\r\n\t\t.success(function (apiResult) {\r\n\t\t\tvm.data = apiResult.data;\r\n\t\t\tvm.processing = false;\r\n\t\t\tconsole.log(apiResult.data);\r\n\t\t})\r\n\t\t.error(function (apiResult) {\r\n\t\t\tif (apiResult) {\r\n\t\t\t\tvm.message = apiResult.message;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.data = null;\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\t\t\r\n\tvm.deleteRow = function(tableRow) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tDatabase.row.delete(tableRow)\r\n\t\t\t.success(function (api) {\r\n\t\t\t\tif (api.success) {\r\n\t\t\t\t\tDatabase.table.get()\r\n\t\t\t\t\t\t.success(function (apiResult) {\r\n\t\t\t\t\t\t\tvm.data = apiResult.data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = api.message;\r\n\t\t\t});\r\n\t};\r\n\t\r\n});","angular.module('mainCtrl', ['angularMoment'])\r\n\r\n.controller('mainController', function($rootScope, $location, Auth) {\r\n\r\n\tvar vm = this;\r\n\r\n\t// get info if a person is logged in\r\n\tvm.loggedIn = Auth.isLoggedIn();\r\n\t\r\n\t\r\n\t// check to see if a user is logged in on every request\r\n\t$rootScope.$on('$routeChangeStart', function(event) {\r\n\t\tvm.loggedIn = Auth.isLoggedIn();\r\n\t\t\r\n\t\tif (vm.loggedIn) {\r\n\t\t\tvm.location = $location.path();\r\n\t\t\tAuth.getUser()\r\n\t\t\t.then(function(node) {\r\n\t\t\t\tvm.user = node.data\r\n\t\t\t});\t\r\n\t\t\t\r\n\t\t\tif ( $location.path() == '/admin/login' ) {\r\n\t\t\t\t$location.path('/admin');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if ( $location.path() == '/admin/login' ) {\r\n\t\t\t// do nothing;\r\n\t\t} else {\r\n\t\t\t$location.path('/admin/login');\r\n\t\t}\r\n\t\t// get user information on page load\r\n\t\t\r\n\t});\r\n\t\r\n\t// resets the view to the top of the page when a new route loads\r\n\t// this prevents the view focus from staying the same from page to page\r\n\t$rootScope.$on('$routeChangeSuccess',function() { \r\n\t\t$(\"html, body\").animate({ scrollTop: 0 }, 100); \r\n\t});\r\n\r\n\t// function to handle login form\r\n\tvm.doLogin = function() {\r\n\t\tvm.processing = true;\r\n\r\n\t\t// clear the error\r\n\t\tvm.error = '';\r\n\r\n\t\tAuth.login(vm.loginData.username, vm.loginData.password)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvm.user = vm.loginData.username;\r\n\t\t\t\t\r\n\t\t\t\t// if a user successfully logs in, redirect to tickets page\r\n\t\t\t\tif (data.success)\t\t\t\r\n\t\t\t\t\t$location.path('/');\r\n\t\t\t\telse \r\n\t\t\t\t\tvm.error = data.message;\r\n\t\t\t\t\r\n\t\t\t});\r\n\t};\r\n\r\n\t// function to handle logging out\r\n\tvm.doLogout = function() {\r\n\t\tAuth.logout();\r\n\t\tvm.user = null;\r\n\t\t\r\n\t\t$location.path('/admin/login');\r\n\t};\r\n\r\n});","// Courtesy of Scotch.io Chris Sevilleja & Holly Lloyd\r\n// http://leanpub.com/mean-machine\r\n\r\nangular.module('authService', [])\r\n\r\n// ===================================================\r\n// auth factory to login and get information\r\n// inject $http for communicating with the API\r\n// inject $q to return promise objects\r\n// inject AuthToken to manage tokens\r\n// ===================================================\r\n.factory('Auth', function($http, $q, AuthToken) {\r\n\r\n\t// create auth factory object\r\n\tvar authFactory = {};\r\n\r\n\t// log a user in\r\n\tauthFactory.login = function(username, password) {\r\n\r\n\t\t// return the promise object and its data\r\n\t\treturn $http.post('/api/authenticate', {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password\r\n\t\t})\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tAuthToken.setToken(data.token);\r\n       \t\t\treturn data;\r\n\t\t\t});\r\n\t};\r\n\r\n\t// log a user out by clearing the token\r\n\tauthFactory.logout = function() {\r\n\t\t// clear the token\r\n\t\tAuthToken.setToken();\r\n\t};\r\n\r\n\t// check if a user is logged in\r\n\t// checks if there is a local token\r\n\tauthFactory.isLoggedIn = function() {\r\n\t\tif (AuthToken.getToken()) \r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\t\r\n\t};\r\n\r\n\t// get the logged in user\r\n\tauthFactory.getUser = function() {\r\n\t\tif (AuthToken.getToken())\r\n\t\t\treturn $http.get('/api/me', { cache: false });\r\n\t\telse\r\n\t\t\treturn $q.reject({ message: 'User has no token.' });\t\t\r\n\t};\r\n\r\n\t// return auth factory object\r\n\treturn authFactory;\r\n\r\n})\r\n\r\n// ===================================================\r\n// factory for handling tokens\r\n// inject $window to store token client-side\r\n// ===================================================\r\n.factory('AuthToken', function($window) {\r\n\r\n\tvar authTokenFactory = {};\r\n\r\n\t// get the token out of local storage\r\n\tauthTokenFactory.getToken = function() {\r\n\t\treturn $window.localStorage.getItem('token');\r\n\t};\r\n\r\n\t// function to set token or clear token\r\n\t// if a token is passed, set the token\r\n\t// if there is no token, clear it from local storage\r\n\tauthTokenFactory.setToken = function(token) {\r\n\t\tif (token)\r\n\t\t\t$window.localStorage.setItem('token', token);\r\n\t \telse\r\n\t\t\t$window.localStorage.removeItem('token');\r\n\t};\r\n\r\n\treturn authTokenFactory;\r\n\r\n})\r\n\r\n// ===================================================\r\n// application configuration to integrate token into requests\r\n// ===================================================\r\n.factory('AuthInterceptor', function($q, $location, AuthToken) {\r\n\r\n\tvar interceptorFactory = {};\r\n\r\n\t// this will happen on all HTTP requests\r\n\tinterceptorFactory.request = function(config) {\r\n\r\n\t\t// grab the token\r\n\t\tvar token = AuthToken.getToken();\r\n\r\n\t\t// if the token exists, add it to the header as x-access-token\r\n\t\tif (token) \r\n\t\t\tconfig.headers['x-access-token'] = token;\r\n\t\t\r\n\t\treturn config;\r\n\t};\r\n\r\n\t// happens on response errors\r\n\tinterceptorFactory.responseError = function(response) {\r\n\r\n\t\t// if our server returns a 403 forbidden response\r\n\t\tif (response.status == 401) {\r\n\t\t\tAuthToken.setToken();\r\n\t\t\t$location.path('/admin/login');\r\n\t\t} else if (response.status == 403) {\r\n\t\t\t$location.path('/forbidden');\r\n\t\t}\r\n\r\n\t\t// return the errors from the server as a promise\r\n\t\treturn $q.reject(response);\r\n\t};\r\n\r\n\treturn interceptorFactory;\r\n\t\r\n});","angular.module('dbService', [])\r\n\r\n.factory('Database', function($http) {\r\n\t\r\n\tvar dbFactory = {};\r\n\t\r\n\tdbFactory.tables = {\r\n\t\tget : function() {\r\n\t\t\treturn $http.get('/api/db');\r\n\t\t}\r\n\t};\r\n\t\r\n\tdbFactory.table = {\r\n\t\tget : function(tableName) {\r\n\t\t\treturn $http.get('/api/db/' + tableName);\r\n\t\t},\r\n\t\t\r\n\t\tdelete : function(tableName) {\r\n\t\t\treturn $http.delete('/api/db' + tableName);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn dbFactory;\r\n});\r\n"],"sourceRoot":"/source/"}