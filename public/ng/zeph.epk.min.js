angular.module("epk",["app.routes","ngAnimate","authService","mainCtrl"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,n){e.when("/admin",{templateUrl:"./views/home.html"}).when("/admin/login",{templateUrl:"./views/users/login.html",controller:"mainController",controllerAs:"login"}).when("/admin/users",{templateUrl:"./views/users/all.html",controller:"mainController",controllerAs:"main"}).when("/admin/users/new",{templateUrl:"./views/users/create.html",controller:"mainController",controllerAs:"main"}).when("/admin/users/:userId",{templateUrl:"./views/users/edit.html",controller:"mainController",controllerAs:"main"}).when("/admin/profile",{templateUrl:"./views/users/profile.html",controller:"mainController",controllerAs:"main"}).when("/admin/whoa-bro",{templateUrl:"./views/403.html",controller:"mainController",controllerAs:"main"}).otherwise({redirectTo:"/admin"}),n.html5Mode(!0)}]),angular.module("mainCtrl",["angularMoment"]).controller("mainController",["$rootScope","$location","Auth",function(e,n,o){var t=this;t.loggedIn=o.isLoggedIn(),e.$on("$routeChangeStart",function(e){t.loggedIn=o.isLoggedIn(),console.log("route change"),t.loggedIn?(t.location=n.path(),o.getUser().then(function(e){t.user=e.data}),"/admin/login"==n.path()&&n.path("/admin")):"/admin/login"==n.path()||n.path("/admin/login")}),e.$on("$routeChangeSuccess",function(){$("html, body").animate({scrollTop:0},200)}),t.doLogin=function(){t.processing=!0,t.error="",o.login(t.loginData.username,t.loginData.password).success(function(e){t.processing=!1,t.user=t.loginData.username,e.success?n.path("/"):t.error=e.message})},t.doLogout=function(){o.logout(),t.user=null,n.path("/admin/login")}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,n,o){var t={};return t.login=function(n,t){return e.post("/api/authenticate",{username:n,password:t}).success(function(e){return o.setToken(e.token),e})},t.logout=function(){o.setToken()},t.isLoggedIn=function(){return!!o.getToken()},t.getUser=function(){return o.getToken()?e.get("/api/me",{cache:!1}):n.reject({message:"User has no token."})},t}]).factory("AuthToken",["$window",function(e){var n={};return n.getToken=function(){return e.localStorage.getItem("token")},n.setToken=function(n){n?e.localStorage.setItem("token",n):e.localStorage.removeItem("token")},n}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,n,o){var t={};return t.request=function(e){var n=o.getToken();return n&&(e.headers["x-access-token"]=n),e},t.responseError=function(t){return 401==t.status?(o.setToken(),n.path("/admin/login")):403==t.status&&n.path("/forbidden"),e.reject(t)},t}]);
//# sourceMappingURL=zeph.epk.min.js.map
