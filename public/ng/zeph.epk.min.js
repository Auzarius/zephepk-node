angular.module("epk",["xeditable","app.routes","ngAnimate","authService","mainCtrl","dbCtrl","dbService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]).run(["editableOptions",function(e){e.theme="bs3"}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/admin",{templateUrl:"./views/home.html"}).when("/admin/login",{templateUrl:"./views/users/login.html",controller:"mainController",controllerAs:"login"}).when("/admin/users",{templateUrl:"./views/users/all.html",controller:"mainController",controllerAs:"main"}).when("/admin/users/new",{templateUrl:"./views/users/create.html",controller:"mainController",controllerAs:"main"}).when("/admin/users/:userId",{templateUrl:"./views/users/edit.html",controller:"mainController",controllerAs:"main"}).when("/admin/profile",{templateUrl:"./views/users/profile.html",controller:"mainController",controllerAs:"main"}).when("/admin/db",{templateUrl:"./views/db/index.html",controller:"tablesController",controllerAs:"tables"}).when("/admin/db/:table",{templateUrl:"./views/db/table.html",controller:"tableController",controllerAs:"table"}).when("/admin/whoa-bro",{templateUrl:"./views/403.html",controller:"mainController",controllerAs:"main"}).otherwise({redirectTo:"/admin"}),t.html5Mode(!0)}]),angular.module("dbCtrl",["dbService"]).controller("tablesController",["$scope","Database",function(e,t){var n=this;n.processing=!0,t.tables.get().success(function(e){n.data=e.data,n.processing=!1}).error(function(e){e&&(n.message=e.message),n.data=null,n.processing=!1}),n.deleteTable=function(e){n.processing=!0,t.table.delete(e).success(function(e){e.success&&t.tables.get().success(function(e){n.data=e.data}),n.processing=!1,n.message=e.message})}}]).controller("tableController",["$scope","$routeParams","Database",function(e,t,n){var o=this;o.processing=!0,e.noSort=function(e){return e?(e.$$hashKey&&delete e.$$hashKey,Object.keys(e)):[]},e.isNumber=angular.isNumber,e.isDate=function(e){var t=Date.parse(e);return!isNaN(t)&&!(e.toString().length<10)},e.parseDate=function(t){return e.isDate(t)?Date.parse(t):t},e.getType=function(e){return typeof e},n.table.get(t.table).success(function(e){o.data=e.data,o.processing=!1,console.log(e.data)}).error(function(e){e&&(o.message=e.message),o.data=null,o.processing=!1}),o.deleteRow=function(e){o.processing=!0,n.row.delete(e).success(function(e){e.success&&n.table.get().success(function(e){o.data=e.data}),o.processing=!1,o.message=e.message})}}]),angular.module("mainCtrl",["angularMoment"]).controller("mainController",["$rootScope","$location","Auth",function(e,t,n){var o=this;o.loggedIn=n.isLoggedIn(),e.$on("$routeChangeStart",function(e){o.loggedIn=n.isLoggedIn(),o.loggedIn?(o.location=t.path(),n.getUser().then(function(e){o.user=e.data}),"/admin/login"==t.path()&&t.path("/admin")):"/admin/login"==t.path()||t.path("/admin/login")}),e.$on("$routeChangeSuccess",function(){$("html, body").animate({scrollTop:0},100)}),o.doLogin=function(){o.processing=!0,o.error="",n.login(o.loginData.username,o.loginData.password).success(function(e){o.processing=!1,o.user=o.loginData.username,e.success?t.path("/"):o.error=e.message})},o.doLogout=function(){n.logout(),o.user=null,t.path("/admin/login")}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,t,n){var o={};return o.login=function(t,o){return e.post("/api/authenticate",{username:t,password:o}).success(function(e){return n.setToken(e.token),e})},o.logout=function(){n.setToken()},o.isLoggedIn=function(){return!!n.getToken()},o.getUser=function(){return n.getToken()?e.get("/api/me",{cache:!1}):t.reject({message:"User has no token."})},o}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,n){var o={};return o.request=function(e){var t=n.getToken();return t&&(e.headers["x-access-token"]=t),e},o.responseError=function(o){return 401==o.status?(n.setToken(),t.path("/admin/login")):403==o.status&&t.path("/forbidden"),e.reject(o)},o}]),angular.module("dbService",[]).factory("Database",["$http",function(e){var t={};return t.tables={get:function(){return e.get("/api/db")}},t.table={get:function(t){return e.get("/api/db/"+t)},delete:function(t){return e.delete("/api/db"+t)}},t}]);
//# sourceMappingURL=zeph.epk.min.js.map
